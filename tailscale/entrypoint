#!/bin/bash

set -euo pipefail

exec 3>&1
exec 1>&2

if [[ ${USERSPACE_NET:-} == 'true' ]]; then
  NET_OPTS='--tun=userspace-networking'
  PROXY_OPTS='--socks5-server=127.0.0.1:1055 --outbound-http-proxy-listen=127.0.0.1:8080'

else
  NET_OPTS=''
  PROXY_OPTS='--socks5-server=0.0.0.0:1055 --outbound-http-proxy-listen=0.0.0.0:8080'

  checkiptable_cleanup() {
    iptables-$1 -D INPUT -j lala >/dev/null 2>&1 || :
    iptables-$1 -X lala          >/dev/null 2>&1 || :
  }

  checkiptable() (
    trap "checkiptable_cleanup $1" EXIT
    iptables-$1 -N lala          >/dev/null 2>&1 || exit 1
    iptables-$1 -A INPUT -j lala >/dev/null 2>&1 || exit 1
  )

  working_iptables=
  if checkiptable nft; then
    working_iptables=iptables-nft
  elif checkiptable legacy; then
    working_iptables=iptables-legacy
  fi

  case "$working_iptables" in
    iptables-nft)
      echo "using nft iptables"
      update-alternatives --set iptables `which iptables-nft` > /dev/null
      update-alternatives --set ip6tables `which ip6tables-nft` > /dev/null
      ;;
    iptables-legacy)
      echo "using legacy iptables"
      update-alternatives --set iptables `which iptables-legacy` > /dev/null
      update-alternatives --set ip6tables `which ip6tables-legacy` > /dev/null
      ;;
    *)
      echo "no working iptables" >&2
      exit 1
      ;;
  esac

  if [[ ! -c /dev/net/tun ]]; then
    mkdir -p /dev/net
    mknod /dev/net/tun c 10 200
  fi

  iptables -P INPUT DROP
  iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
  iptables -A INPUT -i lo -j ACCEPT
  iptables -A INPUT -p udp -m udp --dport 443 -j ACCEPT
fi

if [[ -n ${K8S_STATE:-} ]]; then
  STATE_OPTS="--state=kube:$K8S_STATE"
else
  STATE_OPTS="--state=/var/lib/tailscale/tailscaled.state"
fi

exec 1>&3
exec 3>&-

if [[ -n ${TS_AUTHKEY:-} ]]; then
  (
    while sleep 1; do
      if [[ $(tailscale status --json 2> /dev/null | jq -r .BackendState ) == "NeedsLogin" ]]; then
        tailscale up --authkey="${TS_AUTHKEY}" --accept-routes=true --accept-dns=true --ssh=true || :
      else
        exit 0
      fi
    done
  ) &
fi

exec tailscaled \
  --no-logs-no-support \
  --statedir=/var/lib/tailscale \
  --socket=/run/tailscale/tailscaled.sock \
  --port 443 \
  $NET_OPTS $PROXY_OPTS $STATE_OPTS
